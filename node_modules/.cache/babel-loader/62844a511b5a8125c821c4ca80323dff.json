{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\David\\\\Desktop\\\\cursos por completar\\\\React JS\\\\fitness\\\\FitnessApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\n\nconst useFetch = url => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  useEffect(() => {\n    const fetchResource = async () => {\n      try {\n        let res = await fetch(url);\n        let data = await res.json();\n        setData(data);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(error);\n      }\n    };\n\n    fetchExercise();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["C:\\Users\\David\\Desktop\\cursos por completar\\React JS\\fitness\\fitnessapp\\src\\hooks\\useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","loading","setLoading","error","setError","fetchResource","res","fetch","json","fetchExercise"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAGC,GAAG,IAAI;AAAA,oBACMH,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACZI,IADY;AAAA,QACNC,OADM;;AAAA,qBAEYL,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,QAEZM,OAFY;AAAA,QAEHC,UAFG;;AAAA,qBAGQP,QAAQ,CAAC,IAAD,CAHhB;AAAA;AAAA,QAGZQ,KAHY;AAAA,QAGLC,QAHK;;AAKpBR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,aAAa,GAAG,YAAW;AAC7B,UAAG;AACC,YAAIC,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAArB;AACA,YAAIC,IAAI,GAAG,MAAMO,GAAG,CAACE,IAAJ,EAAjB;AACAR,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OALD,CAMA,OAAOC,KAAP,EAAc;AACVD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,KAXD;;AAYAM,IAAAA,aAAa;AAChB,GAdQ,EAcN,CAACX,GAAD,CAdM,CAAT;AAeA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACH,CArBD;;AAsBA,eAAeN,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nconst useFetch = url => {\r\n    const [ data, setData ] = useState([])\r\n    const [ loading, setLoading ] = useState(false)\r\n    const [ error, setError ] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchResource = async () =>{\r\n            try{\r\n                let res = await fetch(url);\r\n                let data = await res.json()\r\n                setData(data)\r\n                setLoading(false)\r\n            }\r\n            catch (error) {\r\n                setLoading(false)\r\n                setError(error)\r\n            }\r\n        }\r\n        fetchExercise()\r\n    }, [url])\r\n    return { data, loading, error}\r\n}\r\nexport default useFetch"]},"metadata":{},"sourceType":"module"}